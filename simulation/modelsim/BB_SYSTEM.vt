// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/17/2019 18:17:47"
                                                                                
// Verilog Test Bench template for design : BB_SYSTEM
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module BB_SYSTEM_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;

	parameter TCK = 20; // clock period in ns
	parameter CLK_FREQ = 1000000000 / TCK; // Frequenzy in HZ
	parameter DATAWIDTH_BUS = 32;
// test vector input registers
reg BB_SYSTEM_CLOCK_50;
reg BB_SYSTEM_RESET_InHigh;
reg [DATAWIDTH_BUS-1:0] DataMemory_Cont;
// wires                                               


// assign statements (if any)                          
	BB_SYSTEM BB_SYSTEM_u0 (
	// port map - connection between master ports and signals/registers   
		.BB_SYSTEM_CLOCK_50(BB_SYSTEM_CLOCK_50),
		.BB_SYSTEM_RESET_InHigh(BB_SYSTEM_RESET_InHigh)
	);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
	BB_SYSTEM_CLOCK_50 <= 0;
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
	#(TCK/2) BB_SYSTEM_CLOCK_50 <= ~ BB_SYSTEM_CLOCK_50;
initial begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin     
                    
	#0 		BB_SYSTEM_RESET_InHigh <= 1'b1;
	#100 	BB_SYSTEM_RESET_InHigh <= 1'b0; DataMemory_Cont<=32'h0000000a;	
	#(TCK*10000) $finish;	
@eachvec;
$finish;                                              
// --> end                                             
end                                                    
endmodule
